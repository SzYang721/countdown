(globalThis.TURBOPACK||(globalThis.TURBOPACK=[])).push(["object"==typeof document?document.currentScript:void 0,49264,33366,t=>{"use strict";let n;t.s(["createCountdown",()=>i,"deleteCountdown",()=>f,"getAllCountdowns",()=>g,"getCountdown",()=>l,"updateCountdown",()=>s],49264),t.s(["v4",()=>u],33366);let e={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)},o=new Uint8Array(16),r=[];for(let t=0;t<256;++t)r.push((t+256).toString(16).slice(1));let u=function(t,u,a){return!e.randomUUID||u||t?function(t,e,u){var a,c,d;let i=null!=(d=null!=(c=(t=t||{}).random)?c:null==(a=t.rng)?void 0:a.call(t))?d:function(){if(!n){if("undefined"==typeof crypto||!crypto.getRandomValues)throw Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");n=crypto.getRandomValues.bind(crypto)}return n(o)}();if(i.length<16)throw Error("Random bytes length must be >= 16");if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,e){if((u=u||0)<0||u+16>e.length)throw RangeError("UUID byte range ".concat(u,":").concat(u+15," is out of buffer bounds"));for(let t=0;t<16;++t)e[u+t]=i[t];return e}return function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return(r[t[n+0]]+r[t[n+1]]+r[t[n+2]]+r[t[n+3]]+"-"+r[t[n+4]]+r[t[n+5]]+"-"+r[t[n+6]]+r[t[n+7]]+"-"+r[t[n+8]]+r[t[n+9]]+"-"+r[t[n+10]]+r[t[n+11]]+r[t[n+12]]+r[t[n+13]]+r[t[n+14]]+r[t[n+15]]).toLowerCase()}(i)}(t,u,a):e.randomUUID()},a="countdowns";function c(){try{let t=localStorage.getItem(a);return t?JSON.parse(t):[]}catch(t){return console.error("Error reading from localStorage:",t),[]}}function d(t){try{localStorage.setItem(a,JSON.stringify(t))}catch(t){console.error("Error saving to localStorage:",t)}}async function i(t){let n=u(),e=new Date().toISOString(),o={id:n,...t,createdAt:e,updatedAt:e},r=c();return r.push(o),d(r),n}async function l(t){return c().find(n=>n.id===t)||null}async function s(t,n){let e=c(),o=e.findIndex(n=>n.id===t);if(-1===o)throw Error("Countdown not found");let r=new Date().toISOString();e[o]={...e[o],...n,updatedAt:r},d(e)}async function f(t){d(c().filter(n=>n.id!==t))}async function g(){return c().sort((t,n)=>new Date(n.createdAt).getTime()-new Date(t.createdAt).getTime())}}]);